{"version":3,"sources":["webpack:///./src/app/components/form-login/form-login.component.html","webpack:///./src/app/components/form-login/form-login.component.ts","webpack:///./src/app/routes/login-page/login-page.component.html","webpack:///./src/app/routes/login-page/login-page.component.ts","webpack:///./src/app/routes/login-page/module.ts","webpack:///./src/app/routes/login-page/router.ts"],"names":[],"mappings":";;;;;;;;;AAAA,ijB;;;;;;;;;;;;;;;;;;ACAwE;AACJ;AAOpE;IAKE,4BACU,WAAwB;QADlC,iBAEK;QADK,gBAAW,GAAX,WAAW,CAAa;QAJxB,eAAU,GAAG,IAAI,0DAAY,EAAE;QAOjC,cAAS,GAAG;YAClB,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACrC,KAAK,EAAE,CAAE,eAAe,EAAE,yDAAU,CAAC,QAAQ,CAAE;gBAC/C,QAAQ,EAAE,CAAE,OAAO,EAAE,yDAAU,CAAC,QAAQ,CAAE;aAC3C,CAAC;QACJ,CAAC;QAEM,eAAU,GAAG;YAClB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAC5C,CAAC;IAXG,CAAC;IAaL,qCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IApBS;QAAT,4DAAM,EAAE;;0DAAgC;IAF9B,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,6HAA0C;SAE3C,CAAC;+EAOuB,0DAAW;OANvB,kBAAkB,CAwB9B;IAAD,yBAAC;CAAA;AAxB8B;;;;;;;;;;;;ACR/B,kG;;;;;;;;;;;;;;;;;;ACAkD;AAEa;AAO/D;IAEE,4BACU,WAAwB;QADlC,iBAEK;QADK,gBAAW,GAAX,WAAW,CAAa;QAG1B,cAAS,GAAG,UAAE,QAAmB;YACvC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAE,QAAQ,CAAE;iBACjC,IAAI,CAAE,qBAAW;gBAChB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;gBAExB,MAAM,CAAC,YAAY,CAAC,OAAO,CAAE,YAAY,EAAE,WAAW,CAAC,IAAI,CAAC,KAAK,CAAE;YACrE,CAAC,CAAE;iBACF,KAAK,CAAE,qBAAW,IAAI,cAAO,CAAC,KAAK,CAAC,WAAW,CAAC,EAA1B,CAA0B,CAAE;QACrD,CAAC;IAVG,CAAC;IAYL,qCAAQ,GAAR;IACA,CAAC;IAjBU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,yHAA0C;SAE3C,CAAC;+EAIuB,uEAAW;OAHvB,kBAAkB,CAmB9B;IAAD,yBAAC;CAAA;AAnB8B;;;;;;;;;;;;;;;;;;;;;;;ACT/B;;EAEE;AACE,UAAU;AAC+B;AACM;AACmB;AAElE,QAAQ;AACoD;AACzB;AACmD;AAC1F,EAAE;AAGF;;EAEE;AAkBE;IANJ,EAAE;IAGF;;MAEE;IACE;IAAqB,CAAC;IAAT,MAAM;QAjBlB,8DAAQ,CAAC;YACN,YAAY,EAAE,CAAE,wEAAkB,EAAE,8FAAkB,CAAE;YACxD,OAAO,EAAE;gBACL,4DAAY;gBAEZ,0DAAW,EAAE,kEAAmB;gBAEhC,gDAAgD;gBAChD,+CAAO;aACV;SACJ,CAAC;QACN,EAAE;QAGF;;UAEE;OACe,MAAM,CAAG;IAAD,aAAC;CAAA;AAAH;AAAG,CAAC;AAC3B,EAAE;;;;;;;;;;;;;AChCE;AAAA;AAAA;AAAA;AAAuD;AACK;AAChE,EAAE;AAGF;;EAEE;AACE,IAAM,KAAK,GAAW;IAClB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wEAAkB;KAChC;CACJ,CAAC;AACN,EAAE;AAGF;;EAEE;AACS,IAAM,OAAO,GAAwB,4DAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC7E,EAAE","file":"routes-login-page-module.js","sourcesContent":["module.exports = \"<form \\r\\n  [formGroup]=\\\"formData\\\"\\r\\n  (submit)=\\\"submitForm()\\\"\\r\\n>\\r\\n  <label for=\\\"email\\\">Email</label>\\r\\n  <input \\r\\n    type=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\"\\r\\n    required minlength=\\\"2\\\"\\r\\n    formControlName=\\\"email\\\"\\r\\n  >\\r\\n\\r\\n  <label for=\\\"password\\\">Mot de passe</label>\\r\\n  <input \\r\\n    type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\"\\r\\n    required minlength=\\\"2\\\"\\r\\n    formControlName=\\\"password\\\"\\r\\n  >\\r\\n\\r\\n  <button type=\\\"submit\\\" [disabled]=\\\"!formData.valid\\\">Connexion</button>\\r\\n</form>\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-form-login',\r\n  templateUrl: './form-login.component.html',\r\n  styles: []\r\n})\r\nexport class FormLoginComponent implements OnInit {\r\n  \r\n  @Output() formSubmit = new EventEmitter()\r\n  public formData: FormGroup;\r\n\r\n  constructor(\r\n    private FormBuilder: FormBuilder\r\n  ) { }\r\n\r\n  private resetForm = ()  => {\r\n    this.formData = this.FormBuilder.group({\r\n      email: [ 'juju@juju.com', Validators.required ],\r\n      password: [ '12345', Validators.required ],\r\n    })\r\n  }\r\n\r\n  public submitForm = () => {\r\n    this.formSubmit.emit(this.formData.value);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.resetForm();\r\n  }\r\n\r\n}\r\n","module.exports = \"<app-form-login\\r\\n    (formSubmit)=\\\"loginUser($event)\\\"\\r\\n></app-form-login>\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserModel } from \"../../models/user.model\";\r\nimport { AuthService } from \"../../services/auth/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styles: []\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n\r\n  constructor(\r\n    private AuthService: AuthService\r\n  ) { }\r\n\r\n  private loginUser = ( userData: UserModel ) => {\r\n    this.AuthService.login( userData )\r\n    .then( apiResponse => {\r\n      console.log(apiResponse)\r\n\r\n      window.localStorage.setItem( 'user-token', apiResponse.data.token )\r\n    } )\r\n    .catch( apiResponse => console.error(apiResponse) )\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","/* \r\nImports \r\n*/\r\n    // Angular\r\n    import { NgModule } from '@angular/core';\r\n    import { CommonModule } from '@angular/common';\r\n    import { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\n\r\n    // Inner\r\n    import { LoginPageComponent } from './login-page.component';\r\n    import { Routing } from \"./router\";\r\n    import { FormLoginComponent } from \"../../components/form-login/form-login.component\";\r\n//\r\n\r\n\r\n/* \r\nDefinition \r\n*/\r\n    @NgModule({\r\n        declarations: [ LoginPageComponent, FormLoginComponent ],\r\n        imports: [ \r\n            CommonModule, \r\n\r\n            FormsModule, ReactiveFormsModule,\r\n\r\n            // Ajouter le router dans la tableau des imports\r\n            Routing\r\n        ]\r\n    })\r\n//\r\n\r\n\r\n/* \r\nExport \r\n*/\r\n    export class Module {};\r\n//","/* \r\nImports \r\n*/\r\n    import { ModuleWithProviders } from '@angular/core';\r\n    import { Routes, RouterModule } from '@angular/router';\r\n    import { LoginPageComponent } from './login-page.component';\r\n//\r\n\r\n\r\n/* \r\nDefinition \r\n*/\r\n    const route: Routes = [\r\n        {\r\n            path: '',\r\n            component: LoginPageComponent\r\n        }\r\n    ];\r\n//\r\n\r\n\r\n/* \r\nExport \r\n*/\r\n    export const Routing: ModuleWithProviders = RouterModule.forChild(route);\r\n//"],"sourceRoot":""}