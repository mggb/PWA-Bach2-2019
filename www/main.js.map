{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.router.ts","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/services/auth/auth.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./routes/home-page/module\": [\n\t\t\"./src/app/routes/home-page/module.ts\",\n\t\t\"routes-home-page-module\"\n\t],\n\t\"./routes/login-page/module\": [\n\t\t\"./src/app/routes/login-page/module.ts\",\n\t\t\"default~routes-login-page-module~routes-register-page-module\",\n\t\t\"routes-login-page-module\"\n\t],\n\t\"./routes/register-page/module\": [\n\t\t\"./src/app/routes/register-page/module.ts\",\n\t\t\"default~routes-login-page-module~routes-register-page-module\",\n\t\t\"routes-register-page-module\"\n\t],\n\t\"./routes/user-page/module\": [\n\t\t\"./src/app/routes/user-page/module.ts\",\n\t\t\"routes-user-page-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n    <app-header [title]=\"appTitle\"></app-header>\r\n    <router-outlet></router-outlet>\r\n    <button (click)=\"title = 'New title'\" >test</button>\r\n  `\r\n})\r\nexport class AppComponent implements OnInit {\r\n  \r\n  public appTitle: string;\r\n\r\n  constructor(){\r\n    this.appTitle = `Hello Stranger`\r\n  }\r\n\r\n  ngOnInit(){}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { MainRouter } from \"./app.router\";\r\nimport { HeaderComponent } from \"./components/header/header.component\";\r\nimport { AppComponent } from './app.component';\r\nimport { AuthService } from \"./services/auth/auth.service\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot( MainRouter, { onSameUrlNavigation: 'reload' } ),\r\n    HttpClientModule\r\n  ],\r\n  providers: [ AuthService ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","/* \r\nImports\r\n*/\r\n    // Angular\r\n    import { Routes } from '@angular/router';\r\n//\r\n\r\n/* \r\nExport\r\n*/\r\n    export const MainRouter: Routes = [\r\n        {\r\n            path: '',\r\n            loadChildren: './routes/home-page/module#Module'\r\n        },\r\n        {\r\n            path: 'register',\r\n            loadChildren: './routes/register-page/module#Module'\r\n        },\r\n        {\r\n            path: 'login',\r\n            loadChildren: './routes/login-page/module#Module'\r\n        },\r\n        {\r\n            path: 'me',\r\n            loadChildren: './routes/user-page/module#Module'\r\n        }\r\n    ];\r\n//\r\n","module.exports = \"<header>\\r\\n  <h1 [textContent]=\\\"title\\\"></h1>\\r\\n  <nav>\\r\\n    <ul>\\r\\n      <li *ngFor=\\\"let item of activeNav\\\">\\r\\n        <a [routerLink]=\\\"item.path\\\" [textContent]=\\\"item.value\\\"></a>\\r\\n    </li>\\r\\n    <button\\r\\n    *ngIf=\\\"userIsConnected\\\"\\r\\n    (click)=\\\"logoutUser()\\\">\\r\\n      Logout</button>\\r\\n    </ul>\\r\\n  </nav>\\r\\n</header>\"","import { Component, OnInit, OnChanges, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styles: []\r\n})\r\nexport class HeaderComponent implements OnInit, OnChanges {\r\n\r\n  public loggedNav: Array<any>\r\n  public unLoggedNav: Array<any>\r\n  public activeNav: Array<any>\r\n  public userIsConnected: boolean\r\n\r\n  @Input() title: string\r\n\r\n  constructor() {\r\n    this.userIsConnected = false;\r\n    this.unLoggedNav = [\r\n      {\r\n        value: 'Accueil',\r\n        path: '/'\r\n      },\r\n      {\r\n        value: 'Inscription',\r\n        path: '/register'\r\n      },\r\n      {\r\n        value: 'Connexion',\r\n        path: '/login'\r\n      }\r\n    ]\r\n\r\n    this.loggedNav = [\r\n      {\r\n        value: 'Accueil',\r\n        path: '/'\r\n      },\r\n      {\r\n        value: 'Mon compte',\r\n        path: '/me'\r\n      },\r\n    ]\r\n   }\r\n\r\n  private checkUserToken = () => {\r\n    if(window.localStorage.getItem('user-token')){\r\n      this.activeNav = this.loggedNav; \r\n      this.userIsConnected = true;\r\n    } else {\r\n      this.activeNav = this.unLoggedNav;\r\n      this.userIsConnected = false;\r\n    }\r\n  }\r\n  public logoutUser = () => {\r\n    window.localStorage.removeItem('user-token')\r\n    this.activeNav = this.unLoggedNav\r\n    this.userIsConnected = false;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.checkUserToken()\r\n  }\r\n\r\n  ngOnChanges(changes: any) {\r\n    console.log(changes)\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { UserModel } from \"../../models/user.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(\r\n    private HttpClient: HttpClient\r\n  ) { }\r\n\r\n  // Method Register POST\r\n  public register = ( userData: UserModel ): Promise<any> => {\r\n    const myHeader = new HttpHeaders()\r\n    myHeader.append('Content-Type', 'application/json')\r\n\r\n    return this.HttpClient.post('https://mcba.dwsapp.io/api/auth/register', userData, { headers: myHeader })\r\n    .toPromise().then(this.getData).catch(this.handleError)\r\n  }\r\n\r\n  // Method Login POST\r\n  public login = ( userData: UserModel ): Promise<any> => {\r\n    const myHeader = new HttpHeaders()\r\n    myHeader.append('Content-Type', 'application/json')\r\n\r\n    return this.HttpClient.post('https://mcba.dwsapp.io/api/auth/login', userData, { headers: myHeader })\r\n    .toPromise().then(this.getData).catch(this.handleError)\r\n  }\r\n\r\n  // Method Authenticate POST\r\n  public authenticate = (): Promise<any> => {\r\n    const myHeader = {\r\n      headers: new HttpHeaders().set('Authorization', `Bearer ${window.localStorage.getItem('user-token')}`)\r\n    }\r\n\r\n    return this.HttpClient.get('https://mcba.dwsapp.io/api/user/me', myHeader)\r\n    .toPromise().then(this.getData).catch(this.handleError)\r\n  }\r\n\r\n  // Get the API response\r\n  private getData(res: any){\r\n    return res || {};\r\n  };\r\n\r\n  // Get the API error\r\n  private handleError(err: any){\r\n    return Promise.reject(err.error);\r\n  };\r\n//\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://mcba.dwsapp.io/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}