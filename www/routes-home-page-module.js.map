{"version":3,"sources":["webpack:///./src/app/components/merchant-card/merchant-card.component.html","webpack:///./src/app/components/merchant-card/merchant-card.component.ts","webpack:///./src/app/routes/home-page/home-page.component.html","webpack:///./src/app/routes/home-page/home-page.component.ts","webpack:///./src/app/routes/home-page/module.ts","webpack:///./src/app/routes/home-page/router.ts","webpack:///./src/app/services/merchant/merchant.service.ts"],"names":[],"mappings":"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","file":"routes-home-page-module.js","sourcesContent":["module.exports = \"<h3>{{merchant.name}}</h3>\\n<ul>\\n<li>{{merchant.infos.address}}</li>\\n  <li>{{merchant.infos.city}}</li>\\n  <li>{{merchant.infos.code}}</li>  \\n</ul>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { InvokeFunctionExpr } from '@angular/compiler';\n\n@Component({\n  selector: 'app-merchant-card',\n  templateUrl: './merchant-card.component.html',\n  styles: []\n})\nexport class MerchantCardComponent implements OnInit {\n\n  @Input() merchant: any\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<ul *ngIf=\\\"categoriesCollectionSlug\\\" class=\\\"categoryList\\\">\\r\\n  <li\\r\\n    *ngFor=\\\"let item of categoriesCollection\\\"\\r\\n    [textContent]=\\\"item.name\\\"\\r\\n    [class]=\\\"item.slug\\\"\\r\\n    (click)=\\\"sortMerchant(item.slug)\\\"\\r\\n    [ngClass]=\\\"{'active': item.slug === activeCategory}\\\"\\r\\n    >\\r\\n  </li>\\r\\n</ul>\\r\\n\\r\\n<ul *ngIf=\\\"marchantCollection\\\">\\r\\n  <li *ngFor=\\\"let item of marchantCollection\\\">\\r\\n    <app-merchant-card [merchant]=\\\"item.content\\\" [ngClass]=\\\"item.category.slug\\\"></app-merchant-card>\\r\\n  </li>\\r\\n</ul>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MerchantService } from '../../services/merchant/merchant.service';\r\nimport { isNgTemplate } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  providers: [ MerchantService ]\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n  \r\n  public marchantCollection: Array<any>;\r\n  public marchantCollectionRaw: Array<string>;\r\n  public categoriesCollection: Array<string>;\r\n  public categoriesCollectionSlug: Array<string>;\r\n  public activeCategory: string;\r\n  constructor(\r\n    // on Inject notre class = on l'instancie\r\n    private MerchantService: MerchantService\r\n  ) {\r\n    this.categoriesCollection = [];\r\n    this.categoriesCollectionSlug = [];\r\n    this.activeCategory = \"all\";\r\n   }\r\n\r\n  private getMerchantList = () => {\r\n    this.MerchantService.readAllItems()\r\n    .then(apiResponse => {\r\n      this.marchantCollection = apiResponse.data\r\n      this.marchantCollectionRaw = apiResponse.data\r\n      this.getMerchantCategories(apiResponse.data)\r\n    })\r\n    .catch(apiResponse => console.log(apiResponse))\r\n  }\r\n\r\n  private getMerchantCategories = (data: any) => {\r\n    data.map((item: any)=>{\r\n      item.category.isActive = false;\r\n      if(this.categoriesCollectionSlug.indexOf(item.category.slug) === -1){\r\n        this.categoriesCollectionSlug.push(item.category.slug)\r\n        this.categoriesCollection.push(item.category)\r\n        \r\n      }\r\n    })\r\n    console.log(this.categoriesCollection)\r\n    console.log(this.categoriesCollectionSlug)\r\n  }\r\n\r\n  public sortMerchant = (cat: string) => {\r\n\r\n    this.activeCategory = cat;\r\n    console.log(cat)\r\n    const tempArray = [];\r\n\r\n    this.marchantCollectionRaw.map( (item:any) => {\r\n      if( item.category.slug === cat) {\r\n        tempArray.push(item);\r\n      }\r\n    })\r\n    this.marchantCollection =  tempArray;\r\n  }\r\n  ngOnInit() {\r\n    this.getMerchantList();\r\n  }\r\n\r\n}\r\n","/* \r\nImports \r\n*/\r\n    // Angular\r\n    import { NgModule } from '@angular/core';\r\n    import { CommonModule } from '@angular/common';\r\n\r\n    // Inner\r\n    import { HomePageComponent } from './home-page.component';\r\n    import { MerchantCardComponent } from \"../../components/merchant-card/merchant-card.component\";\r\n    import { Routing } from \"./router\";\r\n//\r\n\r\n\r\n/* \r\nDefinition \r\n*/\r\n    @NgModule({\r\n        declarations: [ HomePageComponent, MerchantCardComponent ],\r\n        imports: [ \r\n            CommonModule, \r\n\r\n            // Ajouter le router dans la tableau des imports\r\n            Routing\r\n        ]\r\n    })\r\n//\r\n\r\n\r\n/* \r\nExport \r\n*/\r\n    export class Module {};\r\n//","/* \r\nImports \r\n*/\r\n    import { ModuleWithProviders } from '@angular/core';\r\n    import { Routes, RouterModule } from '@angular/router';\r\n    import { HomePageComponent } from './home-page.component';\r\n//\r\n\r\n\r\n/* \r\nDefinition \r\n*/\r\n    const route: Routes = [\r\n        {\r\n            path: '',\r\n            component: HomePageComponent\r\n        }\r\n    ];\r\n//\r\n\r\n\r\n/* \r\nExport \r\n*/\r\n    export const Routing: ModuleWithProviders = RouterModule.forChild(route);\r\n//","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from \"../../../environments/environment\"\n@Injectable({\n  providedIn: 'root'\n})\nexport class MerchantService {\n\n  private apiUrl: string;\n\n  constructor(\n    private HttpClient: HttpClient\n  ) { \n    this.apiUrl = environment.apiUrl;\n  }\n\n  // TODO: crÃ©er la fonction\n  public readAllItems = () => {\n    return this.HttpClient.get(`${this.apiUrl}/merchant/`)\n    .toPromise().then(this.getData).catch(this.handleError)\n  }\n\n  /*public authenticate = (): Promise<any> => {\n\n  }*/\n  private getData(res: any){\n    return res || {};\n  };\n\n  private handleError(err: any){\n    return Promise.reject(err.error);\n  };\n}\n"],"sourceRoot":""}